// Generated by LiveScript 1.6.0
(function(){
  var reg, com, pkg, loopError, print, z, l, R, j, hop, be, internal, slice$ = [].slice, arrayFrom$ = Array.from || function(x){return slice$.call(x);};
  reg = require("./registry");
  com = reg.com, pkg = reg.pkg, loopError = reg.loopError, print = reg.print;
  z = com.z, l = com.l, R = com.R, j = com.j, hop = com.hop;
  be = pkg;
  internal = {};
  internal.integer = function(val){
    var residue;
    residue = Math.abs(val - Math.round(val));
    if (residue > 0) {
      return [false, "not an integer"];
    } else {
      return [true];
    }
  };
  pkg.int = pkg.num.and(internal.integer);
  internal.required = function(props){
    return function(val){
      var I, nI, key;
      I = 0;
      nI = props.length;
      while (I < nI) {
        key = props[I];
        if (val[key] === undefined) {
          return [false, "required value ." + I + " is not present (or is undefined)."];
        }
        I += 1;
      }
      return true;
    };
  };
  pkg.required = hop.wh(function(){
    var args, i$, len$, key, ref$;
    args = R.flatten(arrayFrom$(arguments));
    for (i$ = 0, len$ = args.length; i$ < len$; ++i$) {
      key = args[i$];
      if (!((ref$ = R.type(key)) === 'String' || ref$ === 'Number')) {
        print.route(['required_input']);
        return true;
      }
    }
    return false;
  }, loopError).def(function(){
    var props;
    props = R.flatten(arrayFrom$(arguments));
    return be.obj.and(internal.required(props));
  });
}).call(this);
